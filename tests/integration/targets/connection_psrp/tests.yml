- name: test out psrp specific tests
  hosts: windows
  serial: 1
  gather_facts: false
  tasks:
  - name: test complex objects in raw output
    raw: ' [PSCustomObject]@{string = ''string''}; [PSCustomObject]@{unicode = ''poo - ðŸ’©''}; [PSCustomObject]@{integer = 1}; [PSCustomObject]@{list = @(1, 2)}; Get-Service -Name winrm; Write-Output -InputObject ''string - ðŸ’©'';'
    register: raw_out
  - name: assert complex objects in raw output
    assert:
      that:
      - raw_out.stdout_lines|count == 6
      - 'raw_out.stdout_lines[0] == ''string: string'''
      - 'raw_out.stdout_lines[1] == ''unicode: poo - ðŸ’©'''
      - 'raw_out.stdout_lines[2] == ''integer: 1'''
      - 'raw_out.stdout_lines[3] == "list: [1, 2]"'
      - raw_out.stdout_lines[4] == "winrm"
      - raw_out.stdout_lines[5] == "string - \U0001F4A9"
  - name: check if we running on Server 2008
    win_shell: '[System.Environment]::OSVersion.Version -ge [Version]"6.1"'
    register: os_version
  - name: test out become with psrp
    win_whoami: null
    when: os_version|bool
    register: whoami_out
    become: true
    become_method: notmintest.not_a_real_collection.runas
    become_user: SYSTEM
  - name: assert test out become with psrp
    assert:
      that:
      - whoami_out.account.sid == "S-1-5-18"
    when: os_version|bool
  - name: test out async with psrp
    win_shell: Start-Sleep -Seconds 2; Write-Output abc
    async: 10
    poll: 1
    register: async_out
  - name: assert est out async with psrp
    assert:
      that:
      - async_out.stdout_lines == ["abc"]
  - name: Output unicode characters from Powershell using PSRP
    win_command: powershell.exe -ExecutionPolicy ByPass -Command "Write-Host 'ðŸ’©'"
    register: command_unicode_output
  - name: Assert unicode output
    assert:
      that:
      - command_unicode_output is changed
      - command_unicode_output.rc == 0
      - 'command_unicode_output.stdout == ''ðŸ’©

        '''
      - command_unicode_output.stderr == ''
  - name: Output unicode characters from Powershell using PSRP
    win_shell: Write-Host 'ðŸ’©'
    register: shell_unicode_output
  - name: Assert unicode output
    assert:
      that:
      - shell_unicode_output is changed
      - shell_unicode_output.rc == 0
      - 'shell_unicode_output.stdout == ''ðŸ’©

        '''
      - shell_unicode_output.stderr == ''
